#include <string>
#include <vector>
#include <unordered_map>
#include<iostream>
using namespace std;

string solution1(vector<string> participant, vector<string> completion) {
	string answer = "";
	unordered_map<string, int> v;
	for (auto& i : participant) v[i]++;
	for (auto& i : completion) v[i]--;
	for (auto&i : v)
	{
		if (i.second > 0)
		{
			answer = i.first;
			break;
		}
	}
	return answer;
}
string solution2(vector<string> participant, vector<string> completion) {
	string answer = "";
	unordered_map<string, int> strMap;
	for (auto elem : completion) {
		if (strMap.end() == strMap.find(elem))
			strMap.insert(make_pair(elem, 1));
		else
			strMap[elem]++;
	}

	for (auto elem : participant)
	{
		if (strMap.end() == strMap.find(elem)) {
			answer = elem;
			break;
		}
		else {
			strMap[elem]--;
			if (strMap[elem] < 0) {
				answer = elem;
				break;
			}
		}
	}
	return answer;
}
int main()
{
	vector<string> participant, completion;
	participant.emplace_back("leo");
	participant.emplace_back("kiki");
	participant.emplace_back("eden");
	completion.emplace_back("eden");
	completion.emplace_back("kiki");

	cout << solution1(participant,completion) << endl;

}
